apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "andreadelvecchio.pervasivestudent.gmail.it.flashmobclient"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled = true
        }

    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'org.restlet.jee', name: 'org.restlet', version: '2.3.2'
    compile group: 'org.restlet.jee', name: 'org.restlet.ext.nio', version: '2.3.2'

    //classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.6.0'


}



task print{
    dependsOn 'connectedAndroidTest'
    println "test done"

}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("${buildDir}/reports/jacoco/")
}

task jacocoTestReport (type: JacocoReport){
    dependsOn 'testDebugUnitTest'
    println "runningJacocoTestReport"
    group = "Reporting"

    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml {
            enabled true
            destination file("${buildDir}/reports/jacocoCoverage/jacoco.xml")
        }
        csv.enabled false
        html {
            enabled true
            destination file("${buildDir}/reports/jacocoCoverage/jacoco.html")
            println "wrote html file"
        }
    }


}





